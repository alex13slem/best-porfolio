---
import type { GetStaticPaths } from 'astro';
import { getProjectsWithTechnologies } from '@/lib/drizzle/queries/projects';
import RootLayout from '@/layouts/root-layout.astro';
import { addProtocolToUrl, cn } from '@/lib/utils';
import { parse } from 'marked';
import SeoFragment from '@/components/seo-fragment.astro';

export const getStaticPaths = (async () => {
  const paths = (await getProjectsWithTechnologies()).map(
    (project) => ({
      params: { slug: project.slug },
      props: { project },
    })
  );
  return paths;
}) satisfies GetStaticPaths;

const { project } = Astro.props;

const {
  name,
  description,
  thumbnailGreeting,
  siteLink,
  role,
  githubLink,
  body,
  technologies,
} = project;
const formattedSiteLink = addProtocolToUrl(siteLink);
const formattedGithubLink = addProtocolToUrl(githubLink);
---

<RootLayout>
  <SeoFragment
    slot="seo"
    title={name}
    {description}
    imageUrls={{ fb: thumbnailGreeting }}
  />
  <div class="container py-5">
    <main class="grid grid-cols-12 grid-flow-dense gap-4">
      <!-- Thumbnail -->
      <section
        class={cn(`
          col-span-full 
          lg:col-span-8 lg:row-span-2 
          p-[2px] overflow-clip z-10
					rounded-xl animate-gradient__rotate animate-gradient__activeXs
					relative group aspect-video lg:aspect-auto
        `)}
      >
        <a
          href={formattedSiteLink}
          target="_blank"
          class={cn(`
            block
          bg-white bg-opacity-10 backdrop-blur-sm
						rounded-[10px] border border-white border-opacity-10
						overflow-clip
						z-10 h-full
          `)}
        >
          <img
            src={thumbnailGreeting}
            alt={name}
            loading="lazy"
            class="bg-[#0D1420]
              w-full h-full object-cover"
          />
        </a>
        <i></i>
      </section>

      <!-- Body -->
      <section
        class={cn(`
          col-span-full 
          lg:col-span-8 lg:row-start-3 
          p-4 rounded-xl
					bg-white bg-opacity-10 backdrop-blur-sm
					border border-white border-opacity-10`)}
      >
        <div
          class="prose prose-sm md:prose-base prose-slate dark:prose-invert max-w-none"
          set:html={parse(body)}
        />
      </section>

      <!-- Description -->
      <section
        class={cn(`
          col-span-full row-span-1 row-start-4 
          sm:col-span-8 sm:row-start-2 sm:row-span-4 
          lg:row-span-1 lg:row-start-auto lg:col-span-4 
          p-4 rounded-xl
          bg-white bg-opacity-10 backdrop-blur-sm
          border border-white border-opacity-10 min-h-96`)}
      >
        <h1
          class={cn(`white_gradient
             font-bold bg-clip-text text-transparent text-3xl text-right`)}
        >
          {name}
        </h1>
        <p class="text-base text-gray-300 font-medium text-right">
          {role}
        </p>
        <div
          class="prose prose-sm md:prose-base prose-slate dark:prose-invert"
          set:html={parse(description)}
        />
      </section>

      <!-- Github -->
      <button
        class={cn(` 
          row-start-2 col-span-4
          sm:row-start-auto
          xl:col-span-1
          rounded-xl relative p-4
          bg-white bg-opacity-10 backdrop-blur-sm
          border border-white border-opacity-10
          flex justify-center items-center
          text-white text-opacity-60 hover:text-opacity-90 transition-colors`)}
      >
        <a
          href={formattedGithubLink}
          target="_blank"
          class="absolute inset-0"></a>
        <iconify-icon icon="octicon:logo-github-16" class="text-xl"
        ></iconify-icon>
      </button>

      <!-- Technologies -->
      <section
        class={cn(`
          col-span-8 row-span-2 row-start-2
          sm:col-span-4 sm:row-start-3
          lg:row-span-2  lg:row-start-auto
          xl:col-span-3 
          p-4 rounded-xl
          bg-white bg-opacity-10 backdrop-blur-sm
          border border-white border-opacity-10 h-fit`)}
      >
        <h2
          class={cn(`white_gradient
             font-bod bg-clip-text text-transparent text-xl text-right leading-none`)}
        >
          Технологии на проекте
        </h2>
        <div
          class="mt-3 flex flex-row-reverse flex-wrap gap-3 prose prose-slate dark:prose-invert"
        >
          {
            technologies.map((t) => (
              <a
                href={addProtocolToUrl(t.link)}
                class={cn(`text-2xl flex justify-center items-center
                 text-white text-opacity-60 hover:text-opacity-90 transition-colors`)}
                title={t.name}
              >
                <iconify-icon icon={t.iconifyId} />
              </a>
            ))
          }
        </div>
      </section>
    </main>

    <!-- <aside
      class="row-start-1 row-span-2 col-span-full lg:col-span-4 lg:row-span-3 lg:row-start-auto grid grid-cols-subgrid grid-rows-subgrid lg:sticky top-0"
    >
    </aside> -->
  </div>
</RootLayout>
