---
import type { GetStaticPaths } from 'astro';
import { getProjectsWithTechnologies } from '@/lib/drizzle/queries/projects';
import RootLayout from '@/layouts/root-layout.astro';
import SEO from '@/components/seo.astro';
import { addProtocolToUrl } from '@/lib/utils';
import { parse } from 'marked';

export const getStaticPaths = (async () => {
  const paths = (await getProjectsWithTechnologies()).map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
  return paths;
}) satisfies GetStaticPaths;

const { project } = Astro.props;

const {
  name,
  description,
  thumbnailGreeting,
  slug,
  siteLink,
  role,
  githubLink,
  body,
  technologies,
} = project;
const formattedSiteLink = addProtocolToUrl(siteLink);
const formattedGithubLink = addProtocolToUrl(githubLink);
---

<RootLayout>
  <SEO
    slot="seo"
    title={name}
    {description}
    imageUrls={{ fb: thumbnailGreeting }}
  />
  <div class="container py-5 grid grid-cols-12 grid-flow-dense gap-4">
    <main
      class="grid grid-cols-subgrid grid-rows-subgrid col-span-8 row-span-3"
    >
      <!-- Thumbnail -->
      <section
        class="col-span-8 row-span-2 p-[2px] overflow-clip z-10
					rounded-xl animate-gradient__rotate
					relative group"
      >
        <a
          href={formattedSiteLink}
          target="_blank"
          class="block
          bg-white bg-opacity-10 backdrop-blur-sm
						rounded-[10px] border border-white border-opacity-10
						overflow-clip
						z-10 h-full"
        >
          <img
            src={thumbnailGreeting}
            alt={name}
            loading="lazy"
            class="bg-[#0D1420]
              w-full h-full object-cover"
          />
        </a>
        <i></i>
      </section>

      <!-- Body -->
      <section
        class="col-span-8 row-span-3 p-4
					rounded-xl
					bg-white bg-opacity-10 backdrop-blur-sm
					border border-white border-opacity-10"
      >
        <div
          class="prose prose-slate dark:prose-invert max-w-none"
          set:html={parse(body)}
        />
      </section>
    </main>

    <aside
      class="col-span-4 row-span-3 grid grid-cols-subgrid grid-rows-subgrid sticky top-0"
    >
      <!-- Description -->
      <section
        class="col-span-4 p-4
          rounded-xl
          bg-white bg-opacity-10 backdrop-blur-sm
          border border-white border-opacity-10 min-h-96"
      >
        <h1
          class="white_gradient
              font-bold bg-clip-text text-transparent text-3xl text-right"
        >
          {name}
        </h1>
        <p class="text-base text-gray-300 font-medium text-right">
          {role}
        </p>
        <div
          class="prose prose-slate dark:prose-invert"
          set:html={parse(description)}
        />
      </section>

      <!-- Github -->
      <button
        class="col-span-1
          rounded-xl relative
          bg-white bg-opacity-10 backdrop-blur-sm
          border border-white border-opacity-10
          flex justify-center items-center
          text-white text-opacity-60 hover:text-opacity-90 transition-colors"
      >
        <a href={formattedGithubLink} target="_blank" class="absolute inset-0"
        ></a>
        <iconify-icon icon="octicon:logo-github-16" class="text-xl"
        ></iconify-icon>
      </button>

      <!-- Technologies -->
      <section
        class="col-span-3 row-span-2 p-4
          rounded-xl
          bg-white bg-opacity-10 backdrop-blur-sm
          border border-white border-opacity-10 h-fit"
      >
        <h2
          class="white_gradient
              font-bold bg-clip-text text-transparent text-xl text-right leading-none"
        >
          Технологии на проекте
        </h2>
        <div
          class="mt-3 flex flex-row-reverse flex-wrap gap-3 prose prose-slate dark:prose-invert"
        >
          {
            technologies.map((t) => (
              <a
                href={addProtocolToUrl(t.link)}
                class="text-2xl flex justify-center items-center
                  text-white text-opacity-60 hover:text-opacity-90 transition-colors"
                title={t.name}
              >
                <iconify-icon icon={t.iconifyId} />
              </a>
            ))
          }
        </div>
      </section>
    </aside>
  </div>
</RootLayout>
